name: Build Flet Windows EXE

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '应用程序名称'
        required: true
        default: 'HelloFlet'
      icon_path:
        description: '图标文件路径'
        required: true
        default: 'assets/icon.ico'
  push:
    tags: [ "v*" ]

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\pip\Cache
            **/__pycache__
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Flet build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~\.flet\cache
            ~\AppData\Local\Temp\flet-*
            ~\AppData\Roaming\Python\Python311\site-packages\pyinstaller
          key: flet-build-cache-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            flet-build-cache-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Determine application name
        id: app_name
        run: |
          # 如果是标签推送，使用标签名作为应用名（去除v前缀）
          # 如果是手动触发，使用输入的应用名
          if ("${{ github.event_name }}" -eq "push" -and "${{ github.ref }}" -like "refs/tags/v*") {
            $appName = "${{ github.ref_name }}".Substring(1)
          } else {
            $appName = "${{ github.event.inputs.app_name }}"
          }
          echo "APP_NAME=$appName" >> $env:GITHUB_ENV

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller -F -w main.py --name "${{ env.APP_NAME }}" --icon "${{ github.event.inputs.icon_path }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows
          path: dist\${{ env.APP_NAME }}.exe

      - name: Create GitHub Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist\${{ env.APP_NAME }}.exe
          name: Release ${{ github.ref_name }}
    
