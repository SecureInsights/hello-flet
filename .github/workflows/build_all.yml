name: Build Flet Apps

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '程序名称'
        required: true
        default: 'HelloFlet'
      icon_path:
        description: '图标 .png 路径（相对仓库根目录）'
        required: true
        default: 'assets/icon.png'
  push:
    tags: ["v*"]

jobs:
  build-windows-exe:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python & cache pip
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller flet pillow

      - name: Build EXE
        run: flet pack main.py --name ${{ inputs.app_name || 'HelloFlet' }} --icon ${{ inputs.icon_path || 'assets/icon.png' }}

      - name: Upload Windows EXE
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name || 'HelloFlet' }}-Windows
          path: dist/${{ inputs.app_name || 'HelloFlet' }}.exe

      - name: Create GitHub Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/${{ inputs.app_name || 'HelloFlet' }}.exe
          name: Release ${{ github.ref_name }}

  build-android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: stable
          cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Flet
        run: pip install flet

      - name: Build APK
        run: flet build apk --verbose --offline --project ${{ inputs.app_name || 'HelloFlet' }} --product ${{ inputs.app_name || 'HelloFlet' }} --android-icon-path ${{ inputs.icon_path || 'assets/icon.png' }}

      - name: Find APK
        id: find_apk
        run: |
          apk_path=$(find build -name "*.apk" -type f | head -n 1)
          echo "APK_PATH=$apk_path" >> $GITHUB_OUTPUT

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name || 'HelloFlet' }}-Android
          path: ${{ steps.find_apk.outputs.APK_PATH }}
