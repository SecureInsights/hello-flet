name: Build All Platforms

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '应用名称'
        required: true
        default: 'Todolist'
        type: string
      icon_path:
        description: '图标路径'
        required: true
        default: 'assets/todo.png'
        type: string
  push:
    tags: [ "v*" ]

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
          pip install pillow

      - name: Cache Flet build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~\.flet\cache
            ~\AppData\Local\Temp\flet-*
            # 仅添加pyinstaller相关缓存路径
            ~\AppData\Roaming\Python\Python311\site-packages\pyinstaller
            ~\AppData\Roaming\Python\Python311\site-packages\pillow
            ~\AppData\Local\pip\Cache
          key: flet-cache-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Build EXE with Flet pack
        run: flet pack main.py --name "${{ github.event.inputs.app_name || 'Todolist' }}" --icon "${{ github.event.inputs.icon_path || 'assets/todo.png' }}" 

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.app_name || 'Todolist' }}-Windows
          path: dist\${{ github.event.inputs.app_name || 'Todolist' }}.exe

      - name: Create GitHub Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist\${{ github.event.inputs.app_name || 'Todolist' }}.exe
          name: Release ${{ github.ref_name }}

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter & cache SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: stable
          cache: true

      - name: Setup Python & cache pip
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Flet
        run: pip install flet

      - name: Cache Flutter
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # 如果用户给了图标，就替换默认 assets/icon.png
      - name: Use custom icon
        run: |
          ICON="${{ github.event.inputs.icon_path || 'assets/todo.png' }}"
          if [ -f "$ICON" ]; then
            echo "使用图标: $ICON"
            cp "$ICON" assets/icon.png
          else
            echo "图标文件不存在，保持默认 assets/icon.png"
          fi

      # 构建 APK
      - name: Build APK
        run: flet build apk --verbose

      - name: Find APK
        id: find_apk
        run: |
          apk_path=$(find build -name "*.apk" -type f | head -n 1)
          echo "APK_PATH=$apk_path" >> $GITHUB_OUTPUT
          echo "Detected APK at: $apk_path"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.app_name || 'Todolist' }}-Android
          path: ${{ steps.find_apk.outputs.APK_PATH }}
          
      - name: Upload APK to Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.find_apk.outputs.APK_PATH }}
          name: Release ${{ github.ref_name }}
