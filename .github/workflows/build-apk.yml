name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '应用名称'
        required: true
        default: 'Todolist'
      icon_path:
        description: '图标路径（相对仓库根目录）'
        required: true
        default: 'assets/icon.png'
  push:
    tags: ["v*"]

jobs:
  android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter & cache SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: stable
          cache: true

      - name: Setup Python & cache pip
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Flet
        run: pip install flet

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml', 'pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: 配置 pubspec.yaml（应用名称 + 图标）
        run: |
          APP_NAME="${{ inputs.app_name }}"
          ICON_PATH="${{ inputs.icon_path }}"
          
          # 生成正确格式的 pubspec.yaml（使用 flutter_launcher_icons 插件配置图标）
          cat > pubspec.yaml << EOF
          name: $APP_NAME
          description: A Flet application.
          publish_to: 'none'
          version: 1.0.0

          environment:
            sdk: '>=3.0.0 <4.0.0'

          dependencies:
            flutter:
              sdk: flutter
            flet: ^0.212.0
            flutter_launcher_icons: ^0.13.1  # 用于生成图标的插件

          flutter:
            uses-material-design: true
            assets:
              - $ICON_PATH  # 确保图标作为资源被包含

          # 图标配置（使用插件的标准节点，而非 flutter 下的 icons）
          flutter_icons:
            android: "launcher_icon"
            image_path: "$ICON_PATH"  # 指定图标路径
            adaptive_icon_background: "#FFFFFF"  # 自适应图标背景（可选）
            adaptive_icon_foreground: "$ICON_PATH"  # 自适应图标前景
          EOF

      - name: 安装依赖并生成图标
        run: |
          flutter pub get  # 安装 flutter_launcher_icons 插件
          flutter pub run flutter_launcher_icons  # 生成图标

      - name: 构建 APK（指定应用名称）
        run: flet build apk --verbose --project ${{ inputs.app_name }} --product ${{ inputs.app_name }}

      - name: 查找 APK 文件
        id: find_apk
        run: |
          apk_path=$(find build -name "*.apk" -type f | head -n 1)
          echo "APK_PATH=$apk_path" >> $GITHUB_OUTPUT

      - name: 上传 APK 产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name }}-Android
          path: ${{ steps.find_apk.outputs.APK_PATH }}
