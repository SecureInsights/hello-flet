name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: '应用名称'
        required: true
        default: 'HelloFlet'
      icon_path:
        description: '图标路径（相对仓库根目录）'
        required: true
        default: 'assets/icon.png'
  push:
    tags: [ "v*" ]

jobs:
  android-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter & cache SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: stable
          cache: true

      - name: Setup Python & cache pip
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Flet
        run: pip install flet

      - name: Cache Flutter
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Configure app name and icon
        run: |
          APP_NAME="${{ inputs.app_name || 'HelloFlet' }}"
          ICON_PATH="${{ inputs.icon_path || 'assets/icon.png' }}"
          
          # 创建或更新pubspec.yaml配置
          if [ -f "pubspec.yaml" ]; then
            # 备份现有文件
            cp pubspec.yaml pubspec_backup.yaml
            # 更新应用名称
            sed -i "s/^name: .*/name: $APP_NAME/" pubspec.yaml
            # 添加图标配置
            if ! grep -q "flutter:" pubspec.yaml; then
              echo "flutter:" >> pubspec.yaml
            fi
            if ! grep -q "icons:" pubspec.yaml; then
              echo "  icons:" >> pubspec.yaml
              echo "    android:" >> pubspec.yaml
              echo "      adaptive:" >> pubspec.yaml
              echo "        foreground: $ICON_PATH" >> pubspec.yaml
            fi
          else
            # 创建新的pubspec.yaml
            cat > pubspec.yaml << EOF
          name: $APP_NAME
          description: A Flet application.
          publish_to: 'none'
          version: 1.0.0

          environment:
            sdk: '>=3.0.0 <4.0.0'

          dependencies:
            flutter:
              sdk: flutter
            flet: ^0.212.0

          flutter:
            uses-material-design: true
            assets:
              - $ICON_PATH
            icons:
              android:
                adaptive:
                  foreground: $ICON_PATH
          EOF
          fi

      - name: Build APK
        run: flet build apk --verbose --project ${{ inputs.app_name || 'HelloFlet' }} --product ${{ inputs.app_name || 'HelloFlet' }}
        
      - name: Find APK
        id: find_apk
        run: |
          apk_path=$(find build -name "*.apk" -type f | head -n 1)
          echo "APK_PATH=$apk_path" >> $GITHUB_OUTPUT
          echo "Detected APK at: $apk_path"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app_name || 'HelloFlet' }}-Android
          path: ${{ steps.find_apk.outputs.APK_PATH }}
